"use client";
import { useState, useEffect } from "react";
import Link from "next/link";

export default function ProfilePage() {
	const [activeTab, setActiveTab] = useState("profile");
	const [user, setUser] = useState(null);
	const [loading, setLoading] = useState(true);

	useEffect(() => {
		const userData = localStorage.getItem("user");

		if (userData) {
			setUser(JSON.parse(userData));
		}

		setLoading(false);
	}, []);

	if (loading) {
		return (
			<div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center">
				<div className="text-white text-xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
			</div>
		);
	}

	if (!user) {
		return (
			<div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center">
				<h1 className="text-white text-xl">–ù–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç</h1>
			</div>
		);
	}

	const stats = [
		{ label: "–ü–æ—Å–µ—â–µ–Ω–æ –º–µ—Å—Ç", value: "12", icon: "üìç" },
		{ label: "–û—Å—Ç–∞–≤–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤", value: "8", icon: "üí¨" },
		{ label: "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º", value: "5", icon: "‚≠ê" }
	];

	const recentActivity = [
		{
			action: "–î–æ–±–∞–≤–∏–ª –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
			place: "–ü–∞—Ä–∫ –õ–µ–Ω–∏–Ω—Å–∫–æ–≥–æ –∫–æ–º—Å–æ–º–æ–ª–∞",
			time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
			icon: "‚≠ê"
		},
		{
			action: "–û—Å—Ç–∞–≤–∏–ª –æ—Ç–∑—ã–≤",
			place: '–†–µ—Å—Ç–æ—Ä–∞–Ω "–£ –§–µ–¥–æ—Ä–∞"',
			time: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥",
			icon: "üí¨"
		},
		{
			action: "–ü–æ—Å—Ç—Ä–æ–∏–ª –º–∞—Ä—à—Ä—É—Ç",
			place: "–î–æ–Ω–µ—Ü–∫–∏–π –±–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∏–π —Å–∞–¥",
			time: "3 –¥–Ω—è –Ω–∞–∑–∞–¥",
			icon: "üß≠"
		}
	];

	return (
		<div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
			{/* –•–µ–¥–µ—Ä */}
			<header className="app-header">
				<div className="container py-4">
					<div className="flex items-center justify-between">
						<div className="flex items-center gap-3">
							<div className="w-10 h-10 gradient-primary rounded-xl flex items-center justify-center text-white">
								üë§
							</div>
							<div>
								<h1 className="text-xl font-bold text-white">–ü—Ä–æ—Ñ–∏–ª—å</h1>
								<p className="text-slate-400 text-sm">–í–∞—à —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç</p>
							</div>
						</div>
					</div>
				</div>
			</header>

			<main className="container py-6">
				<div className="dark-card rounded-2xl p-6 text-center mb-6">
					<div className="w-20 h-20 gradient-primary rounded-full flex items-center justify-center text-white text-2xl mx-auto mb-4">
						üë§
					</div>
					<h2 className="text-xl font-bold text-white mb-2">
						{user.nickname || user.name || user.email}
					</h2>
					<p className="text-slate-400 mb-4">–¢—É—Ä–∏—Å—Ç ‚Ä¢ –î–æ–Ω–µ—Ü–∫</p>
					<button className="gradient-primary text-white px-6 py-2 rounded-xl font-medium hover:shadow-soft transition-shadow">
						–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
					</button>
				</div>

				<div className="grid grid-cols-3 gap-3 mb-6">
					{stats.map((stat, index) => (
						<div
							key={stat.label}
							className="dark-card rounded-xl p-4 text-center"
						>
							<div className="text-2xl mb-2">{stat.icon}</div>
							<div className="text-white font-bold text-lg">{stat.value}</div>
							<div className="text-slate-400 text-xs">{stat.label}</div>
						</div>
					))}
				</div>

				<div className="mb-6">
					<h3 className="text-lg font-semibold text-white mb-4">
						–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
					</h3>
					<div className="space-y-3">
						{recentActivity.map((activity, index) => (
							<div key={index} className="dark-card rounded-xl p-4">
								<div className="flex items-center gap-3">
									<div className="w-10 h-10 bg-slate-700 rounded-xl flex items-center justify-center text-slate-300">
										{activity.icon}
									</div>
									<div className="flex-1">
										<div className="text-white font-medium">
											{activity.action}
										</div>
										<div className="text-slate-400 text-sm">
											{activity.place}
										</div>
									</div>
									<div className="text-slate-400 text-xs">{activity.time}</div>
								</div>
							</div>
						))}
					</div>
				</div>

				<div className="space-y-3">
					<button className="w-full dark-card rounded-xl p-4 text-left hover:shadow-medium transition-shadow">
						<div className="flex items-center gap-3">
							<div className="w-10 h-10 bg-blue-500/20 rounded-xl flex items-center justify-center text-blue-400">
								‚≠ê
							</div>
							<div>
								<div className="text-white font-medium">–ú–æ—ë –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</div>
								<div className="text-slate-400 text-sm">–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–µ—Å—Ç–∞</div>
							</div>
						</div>
					</button>

					<button className="w-full dark-card rounded-xl p-4 text-left hover:shadow-medium transition-shadow">
						<div className="flex items-center gap-3">
							<div className="w-10 h-10 bg-green-500/20 rounded-xl flex items-center justify-center text-green-400">
								üí¨
							</div>
							<div>
								<div className="text-white font-medium">–ú–æ–∏ –æ—Ç–∑—ã–≤—ã</div>
								<div className="text-slate-400 text-sm">–û—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã</div>
							</div>
						</div>
					</button>
				</div>
			</main>

			<nav className="mobile-nav fixed bottom-0 left-0 right-0">
				<div className="container">
					<div className="flex justify-around py-3">
						{[
							{ id: "home", icon: "üè†", label: "–ì–ª–∞–≤–Ω–∞—è", href: "/" },
							{ id: "map", icon: "üó∫Ô∏è", label: "–ö–∞—Ä—Ç–∞", href: "/map" },
							{
								id: "profile",
								icon: "üë§",
								label: "–ü—Ä–æ—Ñ–∏–ª—å",
								href: "/profile",
								active: true
							},
							{ id: "more", icon: "‚ãØ", label: "–ï—â—ë", href: "/more" }
						].map(item => (
							<Link
								key={item.id}
								href={item.href}
								className={`mobile-nav-item flex flex-col items-center gap-1 p-2 rounded-xl ${
									activeTab === item.id
										? "active text-blue-400"
										: "text-slate-400"
								}`}
								onClick={() => setActiveTab(item.id)}
							>
								<div
									className={`nav-icon ${
										activeTab === item.id ? "active" : ""
									}`}
								>
									{item.icon}
								</div>
								<span className="text-xs font-medium">{item.label}</span>
							</Link>
						))}
					</div>
				</div>
			</nav>
		</div>
	);
}
