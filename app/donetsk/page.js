// app/donetsk/page.js
'use client'
import { useState } from 'react'
import Link from 'next/link'
import { locations } from '../../lib/data'
import BottomNavigation from '../../components/BottomNavigation'

export default function DonetskPage() {
  const [searchTerm, setSearchTerm] = useState('')
  const [activeType, setActiveType] = useState('all')
  
  const donetskLocations = locations.filter(location => location.category === 'donetsk')

  const attractionTypes = [
    { id: 'all', name: '–í—Å–µ', icon: 'üèôÔ∏è' },
    { id: 'architecture', name: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞', icon: 'üèõÔ∏è' },
    { id: 'monuments', name: '–ü–∞–º—è—Ç–Ω–∏–∫–∏', icon: 'üóΩ' },
    { id: 'historical', name: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ', icon: 'üìú' },
    { id: 'cultural', name: '–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ', icon: 'üé®' }
  ]

  const attractionFeatures = [
    { icon: 'üì∏', label: '–§–æ—Ç–æ—Å–µ—Å—Å–∏–∏' },
    { icon: 'üèõÔ∏è', label: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞' },
    { icon: 'üìú', label: '–ò—Å—Ç–æ—Ä–∏—è' },
    { icon: 'üåø', label: '–ü—Ä–∏—Ä–æ–¥–∞' },
    { icon: 'üé®', label: '–ò—Å–∫—É—Å—Å—Ç–≤–æ' },
    { icon: 'üëÅÔ∏è', label: '–û–±–∑–æ—Ä–Ω—ã–µ' }
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-cyan-50 via-sky-50/30 to-blue-50/30 pb-20">
      {/* –®–∞–ø–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
      <header className="bg-gradient-to-r from-cyan-500 to-blue-600 text-white shadow-strong">
        <div className="container py-6">
          <div className="flex items-center gap-4 mb-6">
            <div className="w-16 h-16 rounded-2xl bg-white/20 backdrop-blur-sm flex items-center justify-center text-2xl">
              üèôÔ∏è
            </div>
            <div>
              <h1 className="text-3xl font-bold">–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h1>
              <p className="opacity-90">–ó–Ω–∞–∫–æ–≤—ã–µ –º–µ—Å—Ç–∞ –î–æ–Ω–µ—Ü–∫–∞</p>
            </div>
          </div>

          {/* –ü–æ–∏—Å–∫ */}
          <div className="relative max-w-2xl">
            <div className="search-icon">üîç</div>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="search-input bg-white/20 backdrop-blur-sm border-white/30 text-white placeholder-white/70"
            />
          </div>
        </div>
      </header>

      {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π */}
      <section className="container py-6">
        <div className="bg-white rounded-3xl p-6 shadow-soft mb-8">
          <h2 className="text-xl font-bold mb-4 text-gray-800">–ß—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å</h2>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {attractionFeatures.map((feature, index) => (
              <div key={index} className="text-center group">
                <div className="w-12 h-12 rounded-2xl bg-gradient-to-br from-cyan-100 to-blue-100 flex items-center justify-center text-lg mx-auto mb-2 group-hover:scale-110 transition-transform">
                  {feature.icon}
                </div>
                <span className="text-xs text-gray-600 font-medium">{feature.label}</span>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <section className="container mb-8">
        <div className="flex gap-2 overflow-x-auto pb-2">
          {attractionTypes.map(type => (
            <button
              key={type.id}
              onClick={() => setActiveType(type.id)}
              className={`flex items-center gap-2 px-4 py-3 rounded-2xl font-medium whitespace-nowrap transition-all ${
                activeType === type.id
                  ? 'bg-white text-cyan-600 shadow-medium'
                  : 'bg-white/80 text-gray-600 hover:bg-white hover:shadow-soft'
              }`}
            >
              <span>{type.icon}</span>
              <span>{type.name}</span>
            </button>
          ))}
        </div>
      </section>

      {/* –°–µ—Ç–∫–∞ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π */}
      <section className="container">
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {donetskLocations.map((location, index) => (
            <div 
              key={location.id}
              className="bg-white rounded-3xl shadow-soft overflow-hidden hover-lift group border border-cyan-100"
            >
              {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
              <div className={`h-32 relative overflow-hidden ${
                index % 3 === 0 ? 'gradient-ocean' : 
                index % 3 === 1 ? 'gradient-mint' : 'gradient-forest'
              }`}>
                <div className="absolute inset-0 flex items-center justify-center text-4xl text-white">
                  {location.image}
                </div>
                <div className="absolute top-3 right-3 bg-white/20 backdrop-blur-sm rounded-full px-3 py-1 text-white text-sm font-medium">
                  ‚≠ê {location.rating}
                </div>
                <div className="absolute bottom-3 left-3 bg-black/40 backdrop-blur-sm rounded-full px-3 py-1 text-white text-xs">
                  üìç {location.distance || '2.0 –∫–º'}
                </div>
              </div>
              
              {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
              <div className="p-5">
                <h3 className="font-bold text-xl mb-2 text-gray-800 group-hover:text-cyan-600 transition-colors">
                  {location.name}
                </h3>
                <p className="text-gray-600 mb-3 text-sm leading-relaxed">
                  {location.description}
                </p>
                
                <div className="flex items-center gap-2 mb-3">
                  <span className="px-2 py-1 bg-cyan-100 text-cyan-700 rounded-full text-xs font-medium">
                    {location.type || '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å'}
                  </span>
                  <span className="px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium">
                    üïí {location.workingHours}
                  </span>
                </div>
                
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-1 text-sm text-gray-500">
                    <span>üí¨</span>
                    <span>{location.reviews} –æ—Ç–∑—ã–≤–æ–≤</span>
                  </div>
                  <button className="px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-xl text-sm font-medium hover:shadow-soft transition-all">
                    –ú–∞—Ä—à—Ä—É—Ç
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
        {donetskLocations.length === 0 && (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üèôÔ∏è</div>
            <h3 className="text-xl font-semibold text-gray-700 mb-2">–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π</h3>
            <p className="text-gray-500">–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –ª—É—á—à–∏–µ –º–µ—Å—Ç–∞ –î–æ–Ω–µ—Ü–∫–∞</p>
          </div>
        )}
      </section>

      <BottomNavigation />
    </div>
  )
}