'use client'
import { useState } from 'react'
import Link from 'next/link'

export default function SettingsPage() {
  const [settings, setSettings] = useState({
    notifications: true,
    darkMode: false,
    locationServices: true,
    soundEffects: true,
    vibration: true,
    autoPlayVideos: false,
    dataSaving: true,
    language: 'ru',
    measurement: 'km',
    fontSize: 'medium'
  })

  const handleSettingChange = (key, value) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }))
  }

  const settingGroups = [
    {
      title: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
      icon: "üîî",
      color: "from-red-500 to-pink-500",
      settings: [
        {
          key: 'notifications',
          label: 'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
          description: '–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –º–µ—Å—Ç–∞—Ö',
          type: 'toggle'
        },
        {
          key: 'soundEffects',
          label: '–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã',
          description: '–ó–≤—É–∫–∏ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏',
          type: 'toggle'
        },
        {
          key: 'vibration',
          label: '–í–∏–±—Ä–∞—Ü–∏—è',
          description: '–í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö',
          type: 'toggle'
        }
      ]
    },
    {
      title: "–í–Ω–µ—à–Ω–∏–π –≤–∏–¥",
      icon: "üé®",
      color: "from-purple-500 to-indigo-500",
      settings: [
        {
          key: 'darkMode',
          label: '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞',
          description: '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ç–µ–º–∞–º–∏',
          type: 'toggle'
        },
        {
          key: 'fontSize',
          label: '–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞',
          description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞',
          type: 'select',
          options: [
            { value: 'small', label: '–ú–∞–ª–µ–Ω—å–∫–∏–π' },
            { value: 'medium', label: '–°—Ä–µ–¥–Ω–∏–π' },
            { value: 'large', label: '–ë–æ–ª—å—à–æ–π' }
          ]
        }
      ]
    },
    {
      title: "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
      icon: "üîí",
      color: "from-green-500 to-emerald-500",
      settings: [
        {
          key: 'locationServices',
          label: '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è',
          description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è',
          type: 'toggle'
        },
        {
          key: 'dataSaving',
          label: '–≠–∫–æ–Ω–æ–º–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞',
          description: '–°–∂–∞—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –¥–∞–Ω–Ω—ã—Ö',
          type: 'toggle'
        }
      ]
    },
    {
      title: "–û—Å–Ω–æ–≤–Ω—ã–µ",
      icon: "‚öôÔ∏è",
      color: "from-blue-500 to-cyan-500",
      settings: [
        {
          key: 'language',
          label: '–Ø–∑—ã–∫',
          description: '–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
          type: 'select',
          options: [
            { value: 'ru', label: '–†—É—Å—Å–∫–∏–π' },
            { value: 'en', label: 'English' }
          ]
        },
        {
          key: 'measurement',
          label: '–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è',
          description: '–ö–∏–ª–æ–º–µ—Ç—Ä—ã –∏–ª–∏ –º–∏–ª–∏',
          type: 'select',
          options: [
            { value: 'km', label: '–ö–∏–ª–æ–º–µ—Ç—Ä—ã' },
            { value: 'mi', label: '–ú–∏–ª–∏' }
          ]
        },
        {
          key: 'autoPlayVideos',
          label: '–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ',
          description: '–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
          type: 'toggle'
        }
      ]
    }
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30 pb-20">
      {/* –®–∞–ø–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
      <header className="bg-gradient-to-r from-gray-600 via-slate-600 to-gray-700 text-white shadow-strong">
        <div className="container py-8">
          <div className="flex items-center gap-6 mb-6">
            <div className="w-20 h-20 rounded-3xl bg-white/20 backdrop-blur-lg flex items-center justify-center text-3xl shadow-lg animate-pulse-slow">
              ‚öôÔ∏è
            </div>
            <div>
              <h1 className="text-4xl font-bold mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
              <p className="text-xl opacity-90">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
            </div>
          </div>
        </div>
      </header>

      <main className="container py-8">
        {/* –ì—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
        {settingGroups.map((group, groupIndex) => (
          <div key={group.title} className="mb-8">
            <div className="flex items-center gap-4 mb-6">
              <div className={`w-12 h-12 rounded-2xl bg-gradient-to-r ${group.color} flex items-center justify-center text-white text-xl shadow-lg`}>
                {group.icon}
              </div>
              <div>
                <h2 className="text-2xl font-bold text-gray-800">{group.title}</h2>
                <p className="text-gray-600">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ {group.title.toLowerCase()}</p>
              </div>
            </div>
            
            <div className="bg-white/80 backdrop-blur-lg rounded-3xl border border-white/50 shadow-soft overflow-hidden">
              {group.settings.map((setting, index) => (
                <div key={setting.key} className={`p-6 ${index !== group.settings.length - 1 ? 'border-b border-gray-100' : ''}`}>
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-800 text-lg mb-1">
                        {setting.label}
                      </h3>
                      <p className="text-gray-600 text-sm">
                        {setting.description}
                      </p>
                    </div>
                    
                    <div className="ml-4">
                      {setting.type === 'toggle' && (
                        <label className="relative inline-flex items-center cursor-pointer">
                          <input
                            type="checkbox"
                            checked={settings[setting.key]}
                            onChange={(e) => handleSettingChange(setting.key, e.target.checked)}
                            className="sr-only peer"
                          />
                          <div className="w-14 h-7 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all peer-checked:bg-gradient-to-r peer-checked:from-purple-500 peer-checked:to-pink-500"></div>
                        </label>
                      )}
                      
                      {setting.type === 'select' && (
                        <select
                          value={settings[setting.key]}
                          onChange={(e) => handleSettingChange(setting.key, e.target.value)}
                          className="px-4 py-2 bg-gray-100 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                        >
                          {setting.options.map(option => (
                            <option key={option.value} value={option.value}>
                              {option.label}
                            </option>
                          ))}
                        </select>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="grid gap-4 mb-8">
          <button className="w-full py-4 bg-gradient-to-r from-blue-500 to-cyan-500 text-white rounded-2xl font-semibold text-lg hover:shadow-xl hover:scale-105 transition-all duration-300">
            üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </button>
          
          <div className="grid grid-cols-2 gap-4">
            <button className="py-4 bg-white border-2 border-gray-200 text-gray-700 rounded-2xl font-semibold hover:border-red-300 hover:text-red-600 hover:scale-105 transition-all duration-300">
              üîÑ –°–±—Ä–æ—Å–∏—Ç—å
            </button>
            <button className="py-4 bg-white border-2 border-gray-200 text-gray-700 rounded-2xl font-semibold hover:border-green-300 hover:text-green-600 hover:scale-105 transition-all duration-300">
              üì§ –≠–∫—Å–ø–æ—Ä—Ç
            </button>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-gradient-to-r from-gray-100 to-slate-100 rounded-3xl p-6 text-center">
          <div className="text-gray-600 text-sm">
            <p className="mb-2">üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
            <p>–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: 1.0.0</p>
          </div>
        </div>
      </main>
    </div>
  )
}
